name: Release

on:
  release:
    types: [published]
      
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  issues: write
  statuses: write
  contents: write
  id-token: write
  pull-requests: write
  packages: write
  deployments: write

jobs:
  release:
    if: github.event.release.tag_name == 'trigger.release'
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_DEPLOY_KEY }}" | base64 --decode > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-add -l
          ssh -vT git@github.com
        continue-on-error: true
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - run: |
          git checkout ${{ github.event.release.target_commitish }}
          git remote set-url origin git@github.com:${{ github.repository }}.git
      - uses: oven-sh/setup-bun@v2
      - run: bun install
      - id: release
        name: Release Script
        continue-on-error: true
        run: echo "$(bun ./scripts/release/index.ts tag=trigger.release type=${{ github.event.release.target_commitish }})" >> $GITHUB_STEP_SUMMARY
        env:
          GH_TOKEN: ${{ github.token }}
          GPG_KEY_ID: ${{ secrets.GPG_SIGNING_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          NPM_ACCESS_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
      # TODO: Return exit code 1 if release fails
