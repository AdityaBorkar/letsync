name: Release

on:
  release:
    types: [published]
      
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  issues: write
  statuses: write
  contents: write
  id-token: write
  pull-requests: write
  packages: write
  deployments: write

jobs:
  release:
    if: github.event.release.tag_name == 'trigger.release'
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOYMENT_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          eval "$(ssh-agent -s)"
          echo "${{ secrets.DEPLOYMENT_KEY_PASSPHRASE }}" | SSH_ASKPASS=/bin/echo ssh-add ~/.ssh/id_rsa
          chmod 600 ~/.ssh/config
        # echo -e "Host github.com\n\tHostName github.com\n\tUser git\n\tIdentityFile ~/.ssh/id_rsa\n" > ~/.ssh/config
        continue-on-error: true
      - run: |
          eval "$(ssh-agent -s)"
          ssh-add -l
        continue-on-error: true
      - run: |
          eval "$(ssh-agent -s)"
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
        # echo 'echo ${{ secrets.DEPLOYMENT_KEY_PASSPHRASE }}' > ~/.ssh_askpass && chmod +x ~/.ssh_askpass
        # echo "${{ secrets.DEPLOYMENT_KEY }}" | tr -d '\r' | DISPLAY=None SSH_ASKPASS=~/.ssh_askpass ssh-add - >/dev/null
        continue-on-error: true
      - run: |
          eval "$(ssh-agent -s)"
          ssh-add -l
        continue-on-error: true
      - run: |
          ssh -vT git@github.com
        continue-on-error: true
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true      
          # ssh-key: ${{ secrets.DEPLOYMENT_KEY }}
      - run: |
          git checkout ${{ github.event.release.target_commitish }}
          git remote set-url origin git@github.com:${{ github.repository }}.git
      - uses: oven-sh/setup-bun@v2
      - run: bun install
      - run: |
          echo "Created at: $(date '+%Y-%m-%d %H:%M:%S')" > timestamp.txt
      - run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"
      - run: |
          git add .
          git commit -m "docs: test commit"
          git push origin ${{ github.event.release.target_commitish }}
      # - id: release
      #   name: Release Script
      #   continue-on-error: true
      #   run: echo "$(bun ./scripts/release/index.ts tag=trigger.release type=${{ github.event.release.target_commitish }})" >> $GITHUB_STEP_SUMMARY
      #   env:
      #     GH_TOKEN: ${{ github.token }}
      #     GPG_KEY_ID: ${{ secrets.GPG_SIGNING_KEY }}
      #     GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      #     GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      #     NPM_ACCESS_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
      # TODO: Return exit code 1 if release fails
