name: 'Setup Repository'

runs:
  using: "composite"
  steps:
    - id: restore-cache
      name: Restore Cache (node_modules)
      uses: actions/cache/restore@v4
      with:
        path: ~/.bun/install/cache
        key: ${{ runner.os }}-bun-${{ hashFiles('bun.lockb') }}
        restore-keys: |
          ${{ runner.os }}-bun

    - name: Install Bun
      if: steps.restore-cache.outputs.cache-hit != 'true'
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest

    - name: Upgrade Bun
      if: steps.restore-cache.outputs.cache-hit == 'true'
      run: bun upgrade
      shell: bash
      # Always running on the latest version is not a good idea. Changes to bun shall directly affect the pipeline.
      # We will revisit this during migration to Deno 2 LTS
    
    - name: Install dependencies
      run: bun install
      shell: bash
    
    # - name: Run postinstall scripts
    #   run: bun pm trust --all
    #   continue-on-error: true

    - name: Test Run
      run: bun -v
      shell: bash

    - name: Delete Cache (node_modules)
      if: steps.restore-cache.outputs.cache-hit == 'true'
      run: |
        gh extension install actions/gh-actions-cache
        gh actions-cache delete "${{ runner.os }}-bun-${{ hashFiles('bun.lockb') }}" --confirm
      shell: bash

    - name: Save Cache (node_modules)
      if: steps.restore-cache.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: ~/.bun/install/cache
        key: ${{ runner.os }}-bun-${{ hashFiles('bun.lockb') }}
