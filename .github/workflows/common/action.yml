# name: Setup Bun

# on:
#     workflow_call:
  
# jobs:
#     setup:
#         name: Setup
#         runs-on: ubuntu-latest
#         timeout-minutes: 10
#         permissions:
#             contents: read
#         steps:    
#           - id: restore-cache
#             name: Restore Cache (node_modules)
#             uses: actions/cache/restore@v4
#             with:
#               path: ~/.bun
#               key: ${{ runner.OS }}-bun-${{ hashFiles('bun.lockb') }}
#               restore-keys: ${{ runner.OS }}-bun
              
#           - name: Install Bun
#             if: steps.restore-cache.outputs.cache-hit != 'true'
#             uses: oven-sh/setup-bun@v2
#             with:
#               bun-version: latest
      
#           - name: Upgrade Bun
#             run: bun upgrade

#         # Always running on the latest version is not a good idea. Changes to bun shall directly affect the pipeline.
#         # We will revisit this during migration to Deno 2 LTS
          
#           - name: Install dependencies
#             run: bun install
      
#           - name: Save Cache (node_modules)
#             uses: actions/cache@v3
#             with:
#               path: ~/.bun
#               key: ${{ runner.OS }}-bun-${{ hashFiles('bun.lockb') }}

name: 'Hello World'

# inputs:
#   who-to-greet:  # id of input
#     description: 'Who to greet'
#     required: true
#     default: 'World'

# outputs:
#   random-number:
#     description: "Random number"
#     value: ${{ steps.random-number-generator.outputs.random-number }}

runs:
  using: "composite"
  steps:    
    - id: restore-cache
      name: Restore Cache (node_modules)
      uses: actions/cache/restore@v4
      with:
        path: ~/.bun
        key: ${{ runner.OS }}-bun-${{ hashFiles('bun.lockb') }}
        restore-keys: ${{ runner.OS }}-bun
        
    - name: Install Bun
      if: steps.restore-cache.outputs.cache-hit != 'true'
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest

    - name: Upgrade Bun
      run: bun upgrade

  # Always running on the latest version is not a good idea. Changes to bun shall directly affect the pipeline.
  # We will revisit this during migration to Deno 2 LTS
    
    - name: Install dependencies
      run: bun install
    
    # - name: Run postinstall scripts
    #   run: bun pm trust --all

    - name: Save Cache (node_modules)
      uses: actions/cache@v3
      with:
        path: ~/.bun
        key: ${{ runner.OS }}-bun-${{ hashFiles('bun.lockb') }}
