name: PR Validation

on:
    pull_request:
      types:
        - opened
        - edited
        - synchronize

permissions:
  pull-requests: write
  statuses: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

# TODO - ONLY RUN ON PR TITLE UPDATE

jobs:
  main:
    name: Lint PR Title
    runs-on: ubuntu-latest
    steps:
      - id: lint_pr_title
        name: Semantic Pull Request
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
          requireScope: false
          subjectPattern: ^(?![A-Z]).+$
          subjectPatternError: |
            The subject "{subject}" found in the pull request title "{title}"
            didn't match the configured pattern. Please ensure that the subject
            starts with a lowercase letter.
          wip: true
          validateSingleCommit: true
          validateSingleCommitMatchesPrTitle: true

      - uses: marocchino/sticky-pull-request-comment@v2
        if: always() && (steps.lint_pr_title.outputs.error_message != null)
        with:
          header: pr-title-lint-error
          message: |
            We require pull request titles to follow the [Conventional Commits specification](https://www.conventionalcommits.org/en/v1.0.0/) and it looks like your proposed title needs to be adjusted. Details:
            
            ```
            ${{ steps.lint_pr_title.outputs.error_message }}
            ```

      - if: ${{ steps.lint_pr_title.outputs.error_message == null }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:   
          header: pr-title-lint-error
          delete: true

      # - name: Set failure status
      #   if: always() && (steps.lint_pr_title.outputs.error_message != null)
      #   uses: actions/github-script@v6
      #   with:
      #     script: |
      #       core.setFailed(`Action failed with error`);
        # const isFailure = '${{ steps.lint_pr_title.outputs.error_message != null }}';
        # github.rest.repos.createCommitStatus({
        #   owner: context.repo.owner,
        #   repo: context.repo.repo,
        #   sha: context.payload.pull_request.head.sha,
        #   state: isFailure ? 'failure' : 'success',
        #   context: 'Lint Pull Request / Lint PR Title (pull_request)',
        #   description: isFailure ? 'PR title needs to follow conventional commits specification' : 'PR title is valid'
        # })
